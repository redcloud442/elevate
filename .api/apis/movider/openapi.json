{
  "openapi": "3.0.0",
  "info": {
    "description": "",
    "title": "SMS API",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "paths": {
    "/sms": {
      "post": {
        "summary": "Send SMS",
        "description": "Send SMS message",
        "tags": [
          "SMS"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "description": "Your API key.",
                    "type": "string"
                  },
                  "api_secret": {
                    "description": "Your API Secret.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The number that the message should be sent. Numbers must be specified in E.164 format. Use commas (,) for multiple receivers (the maximum is 1000 numbers).",
                    "type": "string"
                  },
                  "from": {
                    "description": "- The \"from\" field indicates the sender name or brand name used for sending messages to the recipient.\n- If you do not fill a sender name or brand name in the \"from\" field, the system will automatically use the default sender name.\n- You can send SMS messages with your own customized sender name by [registering it with Movider](https://console.movider.co/sender-name/request/?locale=en&callbackUrl=%2Fsender-name%2Frequest).\n- Please note that the \"from\" field is case-sensitive. Ensure the sender name matches the case (lowercase or uppercase) you registered with Movider.\n",
                    "type": "string"
                  },
                  "text": {
                    "description": "- For trial accounts, you are unable to edit the body message or sender name. The system automatically sends a default message with a default sender. If you would like to customize both the message and sender name, please upgrade your account.\n- If you do not provide a sender name, or if the sender name does not match the one in your registration, the system will automatically send a default message with a default sender name. Please ensure that your sender name is correct before sending.\n",
                    "type": "string"
                  },
                  "callback_url": {
                    "description": "The webhook endpoint of the delivery report for this SMS to send. This parameter overrides the webhook endpoint set in dashboard.",
                    "type": "string"
                  },
                  "callback_method": {
                    "description": "The method of webhook of the delivery report. Choose between GET or POST.",
                    "type": "string"
                  }
                },
                "required": [
                  "api_key",
                  "api_secret",
                  "to",
                  "text"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bad_phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Country Unavailable",
                            "description": "Error description"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Invalid phone number"
                          }
                        }
                      }
                    },
                    "phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "example": "VtznKfqHUjmDCysZyOZDQX",
                            "description": "The unique message id generated by Movider"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Mobile phone number to which the SMS was sent"
                          },
                          "price": {
                            "type": "number",
                            "example": 0.075,
                            "description": "SMS price"
                          }
                        }
                      }
                    },
                    "remaining_balance": {
                      "type": "number",
                      "example": 0.075,
                      "description": "Current account credit balance"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of SMS segment in the message"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bad_phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Country Unavailable",
                            "description": "Error description"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Invalid phone number"
                          }
                        }
                      }
                    },
                    "phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "example": "VtznKfqHUjmDCysZyOZDQX",
                            "description": "The unique message id generated by Movider"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Mobile phone number to which the SMS was sent"
                          },
                          "price": {
                            "type": "number",
                            "example": 0.075,
                            "description": "SMS price"
                          }
                        }
                      }
                    },
                    "remaining_balance": {
                      "type": "number",
                      "example": 0.075,
                      "description": "Current account credit balance"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of SMS segment in the message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_INSUFFICIENT_BALANCE",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Insufficient balance",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_INSUFFICIENT_BALANCE",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Insufficient balance",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not receive an authenticated respose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Send SMS",
        "description": "Send SMS message",
        "tags": [
          "SMS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            },
            "description": "Your API key.",
            "required": true
          },
          {
            "in": "query",
            "name": "api_secret",
            "schema": {
              "type": "string"
            },
            "description": "Your API Secret.",
            "required": true
          },
          {
            "in": "query",
            "name": "to",
            "schema": {
              "type": "string"
            },
            "description": "The number that the message should be sent. Numbers must be specified in E.164 format. Use commas (,) for multiple receivers (the maximum is 1000 numbers).",
            "required": true
          },
          {
            "in": "query",
            "name": "from",
            "schema": {
              "type": "string"
            },
            "description": "- The \"from\" field indicates the sender name or brand name used for sending messages to the recipient.\n- If you do not fill a sender name or brand name in the \"from\" field, the system will automatically use the default sender name.\n- You can send SMS messages with your own customized sender name by [registering it with Movider](https://console.movider.co/sender-name/request/?locale=en&callbackUrl=%2Fsender-name%2Frequest).\n- Please note that the \"from\" field is case-sensitive. Ensure the sender name matches the case (lowercase or uppercase) you registered with Movider.\n"
          },
          {
            "in": "query",
            "name": "text",
            "schema": {
              "type": "string"
            },
            "description": "- For trial accounts, you are unable to edit the body message or sender name. The system automatically sends a default message with a default sender. If you would like to customize both the message and sender name, please upgrade your account.\n- If you do not provide a sender name, or if the sender name does not match the one in your registration, the system will automatically send a default message with a default sender name. Please ensure that your sender name is correct before sending.\n",
            "required": true
          },
          {
            "in": "query",
            "name": "callback_url",
            "schema": {
              "type": "string"
            },
            "description": "The webhook endpoint of the delivery report for this SMS to send. This parameter overrides the webhook endpoint set in dashboard."
          },
          {
            "in": "query",
            "name": "callback_method",
            "schema": {
              "type": "string"
            },
            "description": "The method of webhook of the delivery report. Choose between GET or POST."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bad_phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Country Unavailable",
                            "description": "Error description"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Invalid phone number"
                          }
                        }
                      }
                    },
                    "phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "example": "VtznKfqHUjmDCysZyOZDQX",
                            "description": "The unique message id generated by Movider"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Mobile phone number to which the SMS was sent"
                          },
                          "price": {
                            "type": "number",
                            "example": 0.075,
                            "description": "SMS price"
                          }
                        }
                      }
                    },
                    "remaining_balance": {
                      "type": "number",
                      "example": 0.075,
                      "description": "Current account credit balance"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of SMS segment in the message"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bad_phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Country Unavailable",
                            "description": "Error description"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Invalid phone number"
                          }
                        }
                      }
                    },
                    "phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "example": "VtznKfqHUjmDCysZyOZDQX",
                            "description": "The unique message id generated by Movider"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Mobile phone number to which the SMS was sent"
                          },
                          "price": {
                            "type": "number",
                            "example": 0.075,
                            "description": "SMS price"
                          }
                        }
                      }
                    },
                    "remaining_balance": {
                      "type": "number",
                      "example": 0.075,
                      "description": "Current account credit balance"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of SMS segment in the message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_INSUFFICIENT_BALANCE",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Insufficient balance",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_INSUFFICIENT_BALANCE",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Insufficient balance",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not receive an authenticated respose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sms/scheduled": {
      "post": {
        "description": "Message scheduling functionality gives you the ability to schedule an SMS for a fixed time in the future.",
        "tags": [
          "SMS"
        ],
        "summary": "Send SMS schedule messages.",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "api_key": {
                    "description": "Your API key.",
                    "type": "string"
                  },
                  "api_secret": {
                    "description": "Your API Secret.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The number that the message should be sent. Numbers must be specified in E.164 format. Use commas (,) for multiple receivers (the maximum is 1000 numbers).",
                    "type": "string"
                  },
                  "from": {
                    "description": "- The \"from\" field indicates the sender name or brand name used for sending messages to the recipient.\n- If you do not fill a sender name or brand name in the \"from\" field, the system will automatically use the default sender name.\n- You can send SMS messages with your own customized sender name by [registering it with Movider](https://console.movider.co/sender-name/request/?locale=en&callbackUrl=%2Fsender-name%2Frequest).\n- Please note that the \"from\" field is case-sensitive. Ensure the sender name matches the case (lowercase or uppercase) you registered with Movider.\n",
                    "type": "string"
                  },
                  "text": {
                    "description": "- For trial accounts, you are unable to edit the body message or sender name. The system automatically sends a default message with a default sender. If you would like to customize both the message and sender name, please upgrade your account.\n- If you do not provide a sender name, or if the sender name does not match the one in your registration, the system will automatically send a default message with a default sender name. Please ensure that your sender name is correct before sending.\n",
                    "type": "string"
                  },
                  "delivery_datetime": {
                    "description": "This parameter indicates when Movider will send a message. Your datetime should be in RFC3339 format `2006-02-01T15:04:05+00:00`.",
                    "type": "string"
                  },
                  "callback_url": {
                    "description": "The webhook endpoint of the delivery report for this SMS to send. This parameter overrides the webhook endpoint set in dashboard.",
                    "type": "string"
                  },
                  "callback_method": {
                    "description": "The method of webhook of the delivery report. Choose between GET or POST.",
                    "type": "string"
                  }
                },
                "required": [
                  "api_key",
                  "api_secret",
                  "to",
                  "text",
                  "delivery_datetime"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bad_phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "msg": {
                            "type": "string",
                            "example": "Country Unavailable",
                            "description": "Error description"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Invalid phone number"
                          }
                        }
                      }
                    },
                    "phone_number_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message_id": {
                            "type": "string",
                            "example": "VtznKfqHUjmDCysZyOZDQX",
                            "description": "The unique message id generated by Movider"
                          },
                          "number": {
                            "type": "string",
                            "example": "66812345678",
                            "description": "Mobile phone number to which the SMS was sent"
                          },
                          "price": {
                            "type": "number",
                            "example": 0.075,
                            "description": "SMS price"
                          }
                        }
                      }
                    },
                    "remaining_balance": {
                      "type": "number",
                      "example": 0.075,
                      "description": "Current account credit balance"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of SMS segment in the message"
                    },
                    "scheduledId": {
                      "type": "integer",
                      "example": 1,
                      "description": "Id of the schedule message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_INSUFFICIENT_BALANCE",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Insufficient balance",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not receive an authenticated respose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all scheduled SMS messages.",
        "description": "You can also list all scheduled SMS messages. Click 'Try it' then input your **api-key as username and api-secret as password.**",
        "tags": [
          "SMS"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Key"
          },
          {
            "in": "query",
            "name": "api_secret",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Secret"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1,
                            "description": "The schedule ID"
                          },
                          "text": {
                            "type": "string",
                            "example": "Scheduled Message 01",
                            "description": "The schedule SMS message"
                          },
                          "total_sms": {
                            "type": "integer",
                            "example": 1,
                            "description": "Total SMS to be sent."
                          },
                          "method": {
                            "type": "string",
                            "example": "GET",
                            "description": "The method of webhook of the delivery report."
                          },
                          "callback_url": {
                            "type": "string",
                            "example": "http://yourserver.com/dr",
                            "description": "The webhook endpoint of the delivery report for this SMS to send."
                          },
                          "from": {
                            "type": "string",
                            "example": "SENDER_ID",
                            "description": "The sender ID or number the message should be sent from"
                          },
                          "delivery_date": {
                            "type": "string",
                            "example": "2006-02-01T15:04:05+00:00",
                            "description": "Date and time when the request has been sent"
                          },
                          "delivery_status": {
                            "type": "string",
                            "example": "cancelled",
                            "description": "See all [delivery_status](/reference/schedule-message-status-reference)"
                          },
                          "delivery_status_update_date": {
                            "type": "string",
                            "example": "2006-02-01T15:04:05+00:00",
                            "description": "Date and time when the request has been updated"
                          },
                          "created_date": {
                            "type": "string",
                            "example": "2006-02-01T15:04:05+00:00",
                            "description": "Date and time when the request has been completed"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "The request did not receive an authenticated respose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 403,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_AUTHENTICATION_FAILED",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Authentication field.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sms/scheduled/{scheduleId}": {
      "get": {
        "summary": "Get a scheduled SMS message.",
        "description": "Get a detail of schedule SMS message. Click 'Try it' then input your **api-key as username and api-secret as password.**",
        "tags": [
          "SMS"
        ],
        "security": [
          {
            "Authentication": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the schedule SMS message to get"
          },
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Key"
          },
          {
            "in": "query",
            "name": "api_secret",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Secret"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1,
                      "description": "The schedule ID"
                    },
                    "text": {
                      "type": "string",
                      "example": "Scheduled Message 01",
                      "description": "The schedule SMS message"
                    },
                    "total_sms": {
                      "type": "integer",
                      "example": 1,
                      "description": "Total SMS to be sent."
                    },
                    "method": {
                      "type": "string",
                      "example": "GET",
                      "description": "The method of webhook of the delivery report."
                    },
                    "callback_url": {
                      "type": "string",
                      "example": "http://yourserver.com/dr",
                      "description": "The webhook endpoint of the delivery report for this SMS to send."
                    },
                    "from": {
                      "type": "string",
                      "example": "SENDER_ID",
                      "description": "The sender ID or number the message should be sent from"
                    },
                    "delivery_date": {
                      "type": "string",
                      "example": "2006-02-01T15:04:05+00:00",
                      "description": "Date and time when the request has been sent"
                    },
                    "delivery_status": {
                      "type": "string",
                      "example": "cancelled",
                      "description": "See all [delivery_status](/reference/schedule-message-status-reference)"
                    },
                    "delivery_status_update_date": {
                      "type": "string",
                      "example": "2006-02-01T15:04:05+00:00",
                      "description": "Date and time when the request has been updated"
                    },
                    "created_date": {
                      "type": "string",
                      "example": "2006-02-01T15:04:05+00:00",
                      "description": "Date and time when the request has been completed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 3,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_NOT_FOUND",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Not found.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Cancel a scheduled SMS message before sending. Click 'Try it' then input your **api-key as username and api-secret as password.**",
        "tags": [
          "SMS"
        ],
        "summary": "Cancel a scheduled SMS message.",
        "security": [
          {
            "Authentication": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the schedule SMS message to get"
          },
          {
            "in": "query",
            "name": "api_key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Key"
          },
          {
            "in": "query",
            "name": "api_secret",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Secret"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "404": {
            "description": "Content not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 3,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_NOT_FOUND",
                          "description": "Error title"
                        },
                        "description": {
                          "type": "string",
                          "example": "Not found.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 1,
                          "description": "Error code"
                        },
                        "name": {
                          "type": "string",
                          "example": "ERR_SYSTEM_FAILURE",
                          "description": "Error name"
                        },
                        "description": {
                          "type": "string",
                          "example": "System failure.",
                          "description": "Error description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.movider.co/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "Authentication": {
        "description": "Basic Authentication with username (api_key) and password (api_secret)",
        "type": "http",
        "scheme": "basic"
      }
    },
    "schemas": {
      "ERR400": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "example": 400,
                "description": "Error code"
              },
              "name": {
                "type": "string",
                "example": "ERR_INSUFFICIENT_BALANCE",
                "description": "Error title"
              },
              "description": {
                "type": "string",
                "example": "Insufficient balance",
                "description": "Error description"
              }
            }
          }
        }
      },
      "ERR401": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "example": 403,
                "description": "Error code"
              },
              "name": {
                "type": "string",
                "example": "ERR_AUTHENTICATION_FAILED",
                "description": "Error title"
              },
              "description": {
                "type": "string",
                "example": "Authentication field.",
                "description": "Error description"
              }
            }
          }
        }
      },
      "ERR404": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "example": 3,
                "description": "Error code"
              },
              "name": {
                "type": "string",
                "example": "ERR_NOT_FOUND",
                "description": "Error title"
              },
              "description": {
                "type": "string",
                "example": "Not found.",
                "description": "Error description"
              }
            }
          }
        }
      },
      "ERR500": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "integer",
                "example": 1,
                "description": "Error code"
              },
              "name": {
                "type": "string",
                "example": "ERR_SYSTEM_FAILURE",
                "description": "Error name"
              },
              "description": {
                "type": "string",
                "example": "System failure.",
                "description": "Error description"
              }
            }
          }
        }
      },
      "OK": {
        "type": "object",
        "properties": {
          "bad_phone_number_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Country Unavailable",
                  "description": "Error description"
                },
                "number": {
                  "type": "string",
                  "example": "66812345678",
                  "description": "Invalid phone number"
                }
              }
            }
          },
          "phone_number_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message_id": {
                  "type": "string",
                  "example": "VtznKfqHUjmDCysZyOZDQX",
                  "description": "The unique message id generated by Movider"
                },
                "number": {
                  "type": "string",
                  "example": "66812345678",
                  "description": "Mobile phone number to which the SMS was sent"
                },
                "price": {
                  "type": "number",
                  "example": 0.075,
                  "description": "SMS price"
                }
              }
            }
          },
          "remaining_balance": {
            "type": "number",
            "example": 0.075,
            "description": "Current account credit balance"
          },
          "total_sms": {
            "type": "integer",
            "example": 1,
            "description": "Number of SMS segment in the message"
          }
        }
      },
      "OK_SUB1": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string",
            "example": "Country Unavailable",
            "description": "Error description"
          },
          "number": {
            "type": "string",
            "example": "66812345678",
            "description": "Invalid phone number"
          }
        }
      },
      "OK_SUB2": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "example": "VtznKfqHUjmDCysZyOZDQX",
            "description": "The unique message id generated by Movider"
          },
          "number": {
            "type": "string",
            "example": "66812345678",
            "description": "Mobile phone number to which the SMS was sent"
          },
          "price": {
            "type": "number",
            "example": 0.075,
            "description": "SMS price"
          }
        }
      },
      "OK_SCHEDULE": {
        "type": "object",
        "properties": {
          "bad_phone_number_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string",
                  "example": "Country Unavailable",
                  "description": "Error description"
                },
                "number": {
                  "type": "string",
                  "example": "66812345678",
                  "description": "Invalid phone number"
                }
              }
            }
          },
          "phone_number_list": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "message_id": {
                  "type": "string",
                  "example": "VtznKfqHUjmDCysZyOZDQX",
                  "description": "The unique message id generated by Movider"
                },
                "number": {
                  "type": "string",
                  "example": "66812345678",
                  "description": "Mobile phone number to which the SMS was sent"
                },
                "price": {
                  "type": "number",
                  "example": 0.075,
                  "description": "SMS price"
                }
              }
            }
          },
          "remaining_balance": {
            "type": "number",
            "example": 0.075,
            "description": "Current account credit balance"
          },
          "total_sms": {
            "type": "integer",
            "example": 1,
            "description": "Number of SMS segment in the message"
          },
          "scheduledId": {
            "type": "integer",
            "example": 1,
            "description": "Id of the schedule message"
          }
        }
      },
      "SMS_SCHEDULE": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "The schedule ID"
          },
          "text": {
            "type": "string",
            "example": "Scheduled Message 01",
            "description": "The schedule SMS message"
          },
          "total_sms": {
            "type": "integer",
            "example": 1,
            "description": "Total SMS to be sent."
          },
          "method": {
            "type": "string",
            "example": "GET",
            "description": "The method of webhook of the delivery report."
          },
          "callback_url": {
            "type": "string",
            "example": "http://yourserver.com/dr",
            "description": "The webhook endpoint of the delivery report for this SMS to send."
          },
          "from": {
            "type": "string",
            "example": "SENDER_ID",
            "description": "The sender ID or number the message should be sent from"
          },
          "delivery_date": {
            "type": "string",
            "example": "2006-02-01T15:04:05+00:00",
            "description": "Date and time when the request has been sent"
          },
          "delivery_status": {
            "type": "string",
            "example": "cancelled",
            "description": "See all [delivery_status](/reference/schedule-message-status-reference)"
          },
          "delivery_status_update_date": {
            "type": "string",
            "example": "2006-02-01T15:04:05+00:00",
            "description": "Date and time when the request has been updated"
          },
          "created_date": {
            "type": "string",
            "example": "2006-02-01T15:04:05+00:00",
            "description": "Date and time when the request has been completed"
          }
        }
      },
      "SMS_SCHEDULE_LIST": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 1,
                  "description": "The schedule ID"
                },
                "text": {
                  "type": "string",
                  "example": "Scheduled Message 01",
                  "description": "The schedule SMS message"
                },
                "total_sms": {
                  "type": "integer",
                  "example": 1,
                  "description": "Total SMS to be sent."
                },
                "method": {
                  "type": "string",
                  "example": "GET",
                  "description": "The method of webhook of the delivery report."
                },
                "callback_url": {
                  "type": "string",
                  "example": "http://yourserver.com/dr",
                  "description": "The webhook endpoint of the delivery report for this SMS to send."
                },
                "from": {
                  "type": "string",
                  "example": "SENDER_ID",
                  "description": "The sender ID or number the message should be sent from"
                },
                "delivery_date": {
                  "type": "string",
                  "example": "2006-02-01T15:04:05+00:00",
                  "description": "Date and time when the request has been sent"
                },
                "delivery_status": {
                  "type": "string",
                  "example": "cancelled",
                  "description": "See all [delivery_status](/reference/schedule-message-status-reference)"
                },
                "delivery_status_update_date": {
                  "type": "string",
                  "example": "2006-02-01T15:04:05+00:00",
                  "description": "Date and time when the request has been updated"
                },
                "created_date": {
                  "type": "string",
                  "example": "2006-02-01T15:04:05+00:00",
                  "description": "Date and time when the request has been completed"
                }
              }
            }
          }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}